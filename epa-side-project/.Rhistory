library(readr)
library(dplyr)
library(stringr)
smc_secured <- read_csv("/Volumes/sdc-sus$/Restricted Data Library/SMC Assessor/smc_secured.csv")
paste_helper <- function(num, direct, street, street_type) {
if (is.na(direct)) {
# print("NA present")
return(paste(num, street, street_type))
} else {
return(paste(num, direct, street, street_type))
}
}
smc_secured$situs_pasted[36] == smc_secured$mailing_lower[36]
paste_helper(smc_secured$situs1_fixed[36], smc_secured$`SITUS DIRECTION`[36], smc_secured$`SITUS STREET`[36], smc_secured$`SITUS STREET TYPE`[36])
smc_secured$situs1_fixed <- gsub("(^|[^0-9])0+", "\\1", smc_secured$`SITUS NO1`, perl = TRUE)
smc_secured$situs_pasted <- mapply(paste_helper, smc_secured$situs1_fixed, smc_secured$`SITUS DIRECTION`, smc_secured$`SITUS STREET`, smc_secured$`SITUS STREET TYPE`)
smc_secured$situs_pasted <- tolower(smc_secured$situs_pasted)
smc_secured$mailing_lower <- tolower(smc_secured$`MAILING ADDRESS 1`)
smc_secured$mailing_number <- gsub("([0-9]+).*$", "\\1", smc_secured$`MAILING ADDRESS 1`)
smc_secured$mailing_city_lower <- tolower(smc_secured$`MAILING CITY`)
smc_secured$situs_city_lower <- tolower(smc_secured$`SITUS CITY`)
# I'll do the replacing of the mailing addresses here since it's a little all over the place.
# In mailing, there's a problem with no and so being present but reprsenting n and s. Should be able to replace these easily.
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "avenue", "ave")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "drive", "dr")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "dr.", "dr")
# seems to go down when I do these, wouldn't surprise me if it's finding these inside a word, let me try by adding spaces before and after. This may have done the trick.
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, " no ", " n ")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, " so ", " s ")
# This seems to have brought down the number of matches. It's weird that this would produce fewer matches, it's about 20 but still it's weird.
# smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, " north ", " n ")
# Seems like almost every instance of woodrow was entered as woodrw
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "woodrw", "woodrow")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "street", "st")
# Unlike north, this bumped up the number of matches.
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, " south ", " s ")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, " east ", " e ")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "road", "rd")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "westminister", "westminster")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "mellow", "mello")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "alberini", "alberni")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "court", "ct")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, " way", " wy")
# Also need to change this in the situs pasted as well.
smc_secured$situs_pasted <- str_replace(smc_secured$situs_pasted, " way", " wy")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, " lane", " ln")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "o'connor", "oconnor")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "circle", "cir")
smc_secured$situs_pasted <- str_replace(smc_secured$situs_pasted, "east ", "e ")
smc_secured$situs_pasted <- str_replace(smc_secured$situs_pasted, "o'keefe", "okeefe")
smc_secured$mailing_lower <- str_replace(smc_secured$mailing_lower, "o'keefe", "okeefe")
# 062123220, address should be westminister ave
smc_secured$mailing_lower[which(smc_secured$APN == "062123220")] <- "1132 westminster ave"
# When I used pasting method 1, this does not return many results. Let me see if I do this another way if it's any better.
smc_secured$address_flag <- smc_secured$situs_pasted == smc_secured$mailing_lower
# See how many matches there were.
sum(smc_secured$address_flag, na.rm = TRUE)
sum(smc_secured$address_flag, na.rm = TRUE)/nrow(smc_secured)
# This is saying about 50% of parcels are owner occupied, I'd believe this.
smc_secured$exempt_flag <- ifelse(smc_secured$`EXEMPTION CODE` == 'HO', TRUE, FALSE)
sum(smc_secured$exempt_flag, na.rm = TRUE)
num_agree <- sum(smc_secured$address_flag*smc_secured$exempt_flag, na.rm = TRUE)
num_agree
smc_resident <- read_csv("/Volumes/sdc-sus$/Restricted Data Library/SMC Assessor/smc_resident.csv")
smc_multifam <- read_csv("/Volumes/sdc-sus$/Restricted Data Library/SMC Assessor/smc_multifam.csv")
smc_resident_slim <- smc_resident %>% select(APN, `PROPERTY USE CODE`)
smc_resident_slim$units <- 1
smc_multifam_slim <- smc_multifam %>% mutate("units" = `# OF STUDIO` + `# OF 1 BEDROOM/1 BATH` + `# OF 2 BEDROOMS/1 BATH` + `# OF 2 BEDROOMS/2 BATHS`) %>% select(APN, `PROPERTY USE CODE`, units)
smc_units <- rbind(smc_resident_slim, smc_multifam_slim)
unique(smc_secured$`PUC CODE`)
smc_secured_slim <- smc_secured %>% select(c(APN, `PUC CODE`, `SITUS CITY`, situs_pasted, mailing_lower, address_flag, exempt_flag, mailing_number, situs1_fixed, situs_city_lower, mailing_city_lower, `NET VALUE`))
smc_secured_slim$flags_agree <- smc_secured_slim$address_flag*smc_secured_slim$exempt_flag
smc_secured_slim$number_flag <- smc_secured_slim$mailing_number == smc_secured_slim$situs1_fixed
# View(filter(smc_secured_slim, flags_agree == FALSE))
# View(filter(smc_secured))
epa_secured <- smc_secured_slim %>% filter(`SITUS CITY` == "EAST PALO ALTO")
sum(epa_secured$address_flag)
sum(epa_secured$exempt_flag, na.rm = TRUE)
# View(filter(epa_secured, address_flag == FALSE))
# What I want to view now is when the number flag is true but the address flag is false
# View(filter(epa_secured, address_flag == FALSE & number_flag == TRUE))
# View(filter(epa_secured, number_flag == FALSE))
View(epa_secured)
unique(epa_secured$`PUC CODE`)
hist(epa_secured$`PUC CODE`)
library(readr)
library(dplyr)
library(stringr)
epa_secured$`PUC CODE` %>% group_by(`PUC CODE`) %>% summarize(n())
as.factor(epa_secured$`PUC CODE`) %>% group_by(`PUC CODE`) %>% summarize(n())
count(epa_secured$`PUC CODE`)
count(epa_secured, `PUC CODE`)
View(count(epa_secured, `PUC CODE`))
length(unique(epa_secured$`PUC CODE`))
column_codes <- data.frame(`PUC CODE` = unique(epa_secured$`PUC CODE`))
View(column_codes)
column_codes <- data.frame(`PUC CODE` = order(unique(epa_secured$`PUC CODE`)), "column_code" = c("a"))
column_codes <- data.frame(`PUC CODE` = unique(epa_secured$`PUC CODE`), "column_code" = c("a"))
count(epa_secured$`PUC CODE`)
count(epa_secured, `PUC CODE`)
View(count(epa_secured, `PUC CODE`))
rep("a", 50)
# Fastest would be just a left_join
# count(epa_secured, `PUC CODE`)
column_codes <- data.frame(`PUC CODE` = unique(epa_secured$`PUC CODE`), "column_code" = c("a", "a","a","a","a","a", "a","a","a","a","a", "a","a","a","a","a", "a","a","a","a","a", "a","a","a","a","a", "a","a","a","a","a", "a","a","a","a","a", "a","a","a","a","a", "a","a","a","a","a", "a","a","a"))
# Fastest would be just a left_join
# count(epa_secured, `PUC CODE`)
# a: 1
# b: 2,3,4,5,97
# c: 00
# d: other
column_codes <- data.frame(`PUC CODE` = unique(epa_secured$`PUC CODE`), "column_code" = c("d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d"))
# Fastest would be just a left_join
# count(epa_secured, `PUC CODE`)
# a: 1
# b: 2,3,4,5,97
# c: 00
# d: other
column_codes <- data.frame(`PUC CODE` = unique(epa_secured$`PUC CODE`), "column_code" = c("d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d"))
?lapply
lapply(1:3, function(x) return(x + 1))
unlist(lapply(1:3, function(x) return(x + 1)))
# Fastest would be just a left_join
# count(epa_secured, `PUC CODE`)
# a: 1
# b: 2,3,4,5,97
# c: 00
# d: other
column_codes <- data.frame(`PUC CODE` = unique(epa_secured$`PUC CODE`), "column_code" = c("d"))
code_helper <- function(puc_code) {
if (puc_code == "01") {
return("a")
} else if (puc_code %in% c("02","03","04","05","97")) {
return("b")
} else if (puc_code == "00") {
return("c")
} else {
return("d")
}
}
# Fastest would be just a left_join
# count(epa_secured, `PUC CODE`)
# a: 1
# b: 2,3,4,5,97
# c: 00
# d: other
column_codes <- data.frame(`PUC CODE` = unique(epa_secured$`PUC CODE`))
column_codes$column_code <-  unlist(lapply(column_codes$PUC.CODE,code_helper))
names(column_codes)
names(epa_secured)
names(epa_secured)[2]
names(epa_secured)[2] <- names(column_codes)[1]
names(epa_secured)[2]
epa_secured <- epa_secured %>% left_join(column_codes)
View(epa_secured)
# Owner occupied, mailing and situs addresses match, or rather mailing number and situs number match.
# Need to filter address flag == true and sum
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(sum(units, na.rm = TRUE))
epa_secured <- epa_secured %>% left_join(smc_units)
# Owner occupied, mailing and situs addresses match, or rather mailing number and situs number match.
# Need to filter address flag == true and sum
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(sum(units, na.rm = TRUE))
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% group_by(column_code) %>% summarize(sum(units, na.rm = TRUE))
# Rented - owner not in EPA, number flag is false and mailing address != EPA
epa_secured %>% filter(! number_flag & mailing_city_lower != "east palo alto") %>% group_by(column_code) %>% summarize(sum(units, na.rm = TRUE))
# There do appear to be a number of NAs in units, are these vacant? It would seem that most don't have a use code.
sum(is.na(epa_secured$units))
View(epa_secured[is.na(epa_secured$units),])
# Number of units in EPA
median(epa_secured$`NET VALUE`, na.rm = TRUE)
# Owner occupied, mailing and situs addresses match, or rather mailing number and situs number match.
# Need to filter address flag == true and sum
# %>% group_by(`PUC CODE`), for this one to be correct, I'd actually have to do a custom group_by, I could just map them manually and left_join, that would be a fairly easy way to address this.
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(median(`NET VALUE`, na.rm = TRUE))
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% group_by(column_code) %>% summarize(median(`NET VALUE`, na.rm = TRUE))
# Rented - owner not in EPA, number flag is false and mailing address != EPA
epa_secured %>% filter(! number_flag & mailing_city_lower != "east palo alto") %>% group_by(column_code) %>% summarize(median(`NET VALUE`, na.rm = TRUE))
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code)
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(sum(address_flag))
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(sum(address_flag))
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% group_by(column_code) %>% summarize(sum(address_flag))
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
nrow({epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto")})
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% group_by(column_code) %>% summarize(sum(units, na.rm = TRUE))
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% group_by(column_code) %>% summarize(count(column_code))
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% summarize(count(column_code))
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% count(column_code)
# Owner occupied, mailing and situs addresses match, or rather mailing number and situs number match.
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(sum(address_flag))
epa_secured %>% filter(address_flag == TRUE) %>% count(column_code)
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% count(column_code)
# Rented - owner not in EPA, number flag is false and mailing address != EPA
epa_secured %>% filter(! number_flag & mailing_city_lower != "east palo alto") %>% count(column_code)
View(epa_secured)
# sanity check, this number is lower than the address flag one and it makes sense. Not everyone who is eligible for the exemption has it/has applied for it.
# sum(epa_secured$exempt_flag, na.rm = TRUE)
# There's roughly 95 entries where it's ambiguous. I'm not going to worry about it for now.
# View(epa_secured[is.na(epa_secured$number_flag),])
# Number of EPA parcels
nrow(epa_secured)
# Owner occupied, mailing and situs addresses match, or rather mailing number and situs number match.
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(sum(address_flag))
epa_secured %>% filter(address_flag == TRUE) %>% count(column_code)
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% count(column_code)
# Rented - owner not in EPA, number flag is false and mailing address != EPA
epa_secured %>% filter(! number_flag & mailing_city_lower != "east palo alto") %>% count(column_code)
# There do appear to be a number of NAs in units, are these vacant? It would seem that most don't have a use code.
sum(is.na(epa_secured$units))
View(epa_secured[is.na(epa_secured$units),])
# Number of units in EPA
sum(epa_secured$units, na.rm = TRUE)
# Owner occupied, mailing and situs addresses match, or rather mailing number and situs number match.
# Need to filter address flag == true and sum
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(sum(units, na.rm = TRUE))
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% group_by(column_code) %>% summarize(sum(units, na.rm = TRUE))
# Rented - owner not in EPA, number flag is false and mailing address != EPA
epa_secured %>% filter(! number_flag & mailing_city_lower != "east palo alto") %>% group_by(column_code) %>% summarize(sum(units, na.rm = TRUE))
# There do appear to be a number of NAs in units, are these vacant? It would seem that most don't have a use code.
sum(is.na(epa_secured$units))
# View(epa_secured[is.na(epa_secured$units),])
# Number of units in EPA
median(epa_secured$`NET VALUE`, na.rm = TRUE)
# Owner occupied, mailing and situs addresses match, or rather mailing number and situs number match.
# Need to filter address flag == true and sum
# %>% group_by(`PUC CODE`), for this one to be correct, I'd actually have to do a custom group_by, I could just map them manually and left_join, that would be a fairly easy way to address this.
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(median(`NET VALUE`, na.rm = TRUE))
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% group_by(column_code) %>% summarize(median(`NET VALUE`, na.rm = TRUE))
# Rented - owner not in EPA, number flag is false and mailing address != EPA
epa_secured %>% filter(! number_flag & mailing_city_lower != "east palo alto") %>% group_by(column_code) %>% summarize(median(`NET VALUE`, na.rm = TRUE))
# Number of EPA parcels
nrow(epa_secured)
# sanity check, this number is lower than the address flag one and it makes sense. Not everyone who is eligible for the exemption has it/has applied for it.
# sum(epa_secured$exempt_flag, na.rm = TRUE)
# There's roughly 95 entries where it's ambiguous. I'm not going to worry about it for now.
# View(epa_secured[is.na(epa_secured$number_flag),])
# Number of EPA parcels
nrow(epa_secured)
# Owner occupied, mailing and situs addresses match, or rather mailing number and situs number match.
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(sum(address_flag))
epa_secured %>% filter(address_flag == TRUE) %>% count(column_code)
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% count(column_code)
# Rented - owner not in EPA, number flag is false and mailing address != EPA
epa_secured %>% filter(! number_flag & mailing_city_lower != "east palo alto") %>% count(column_code)
# sanity check, this number is lower than the address flag one and it makes sense. Not everyone who is eligible for the exemption has it/has applied for it.
# sum(epa_secured$exempt_flag, na.rm = TRUE)
# There's roughly 95 entries where it's ambiguous. I'm not going to worry about it for now.
# View(epa_secured[is.na(epa_secured$number_flag),])
# Number of EPA parcels
nrow(epa_secured)
# Owner occupied, mailing and situs addresses match, or rather mailing number and situs number match.
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(sum(address_flag))
epa_secured %>% filter(address_flag == TRUE) %>% count(column_code)
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% count(column_code)
# Rented - owner not in EPA, number flag is false and mailing address != EPA
epa_secured %>% filter(! number_flag & mailing_city_lower != "east palo alto") %>% count(column_code)
# There do appear to be a number of NAs in units, are these vacant? It would seem that most don't have a use code.
sum(is.na(epa_secured$units))
#  View(epa_secured[is.na(epa_secured$units),])
# Number of units in EPA
sum(epa_secured$units, na.rm = TRUE)
# Owner occupied, mailing and situs addresses match, or rather mailing number and situs number match.
# Need to filter address flag == true and sum
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(sum(units, na.rm = TRUE))
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% group_by(column_code) %>% summarize(sum(units, na.rm = TRUE))
# Rented - owner not in EPA, number flag is false and mailing address != EPA
epa_secured %>% filter(! number_flag & mailing_city_lower != "east palo alto") %>% group_by(column_code) %>% summarize(sum(units, na.rm = TRUE))
# There do appear to be a number of NAs in units, are these vacant? It would seem that most don't have a use code.
sum(is.na(epa_secured$units))
# View(epa_secured[is.na(epa_secured$units),])
# Number of units in EPA
median(epa_secured$`NET VALUE`, na.rm = TRUE)
# Owner occupied, mailing and situs addresses match, or rather mailing number and situs number match.
# Need to filter address flag == true and sum
# %>% group_by(`PUC CODE`), for this one to be correct, I'd actually have to do a custom group_by, I could just map them manually and left_join, that would be a fairly easy way to address this.
epa_secured %>% filter(address_flag == TRUE) %>% group_by(column_code) %>% summarize(median(`NET VALUE`, na.rm = TRUE))
# Rented - owner in EPA, number flag is false but mailing address (city) is in EPA
epa_secured %>% filter(! number_flag & mailing_city_lower == "east palo alto") %>% group_by(column_code) %>% summarize(median(`NET VALUE`, na.rm = TRUE))
# Rented - owner not in EPA, number flag is false and mailing address != EPA
epa_secured %>% filter(! number_flag & mailing_city_lower != "east palo alto") %>% group_by(column_code) %>% summarize(median(`NET VALUE`, na.rm = TRUE))
rm(list = ls())
